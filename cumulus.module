<?php

//  $Id$
/**
 * @file
 * The brain of Cumulus.
 *
 * Provides a Flash-based 3D tag cloud.
 * Based on WP-Cumulus for WordPress, by Roy Tanck.
 */

/**
 * Implementation of hook_enable().
 */
function cumulus_enable() {
  drupal_set_message(t('Cumulus has now been enabled. You need to !add a view with cumulus selected as output style to display the cloud.', array('!add' => l(t('add'), 'admin/build/views/add'))));
}

/**
 * Implementation of hook_views_api().
 * Notifies the Views module that we're compatible with a particular API revision.
 */
function cumulus_views_api() {
  return array('api' => 2);
}

/**
 * Template function for cumulus style plugin.
 *
 * @param array $vars
 *  Array of template variables.
 *
 * The JS file is loaded within render() in views_cumulus_style_plugin.inc.
 */
function template_preprocess_views_view_cumulus(&$vars) {
  $view = $vars['view'];
  $rows = $vars['rows'];

  // Calculate weight values and font sizes based on sorting.
  $options = $view->style_options;
  // Range is from 1 to count($rows).
  $range = max(.01, count($rows)) * 1.0001;
  $index = 1;
  $weight = 0;
  $tags_formatted_flash = '';
  $tags_formatted_alt = '';

  if (empty($options['title_field'])) {
    drupal_set_message(t('You have to define a title field to display items.'), 'error');
    return;
  }
  $title_field = $view->field[$options['title_field']];
  $field_options = $title_field->options;
  $link_item = 0;
  $item_path = '';
  if (isset($field_options['alter']['make_link'])) {
    $link_item = $field_options['alter']['make_link'];
    $item_path = $field_options['alter']['path'];
  }
  foreach ($rows as $id => $row) {
    $tokens = array();
    // Get token replacements.
    foreach ($view->display_handler->get_handlers('field') as $field => $handler) {
      if (isset($row->{$handler->field_alias})) {
        $tokens["[$field]"] = $row->{$handler->field_alias};
      }
      else {
        $tokens["[$field]"] = '';
      }
    }
    $path = strip_tags(html_entity_decode(strtr($item_path, $tokens)));
    if (empty($options['use_field_as_weight']['weight_text'])) {
      // Use item sort order for weight calculation.
      $weight = 1 + floor($options['size_interval'] * $index / $range);
    }
    elseif (isset($row->{$view->field[$options['use_field_as_weight']['weight_field']]->field_alias})) {
      // Use (int) value of selected field for weight calculation.
      $weight = 1 + floor($options['size_interval'] * intval($row->{$view->field[$options['use_field_as_weight']['weight_field']]->field_alias}) / $range);
    }
    $font_size = (intval($weight) * $options['flash_font_size_interval']) + ($options['flash_font_size'] - $options['flash_font_size_interval']);
    $tags_formatted_flash .= l($row->{$title_field->field_alias}, $path, array('attributes' => array('style' => 'font-size: ' . $font_size . 'px;')));
    $tags_formatted_alt .= l($row->{$title_field->field_alias}, $path, array('attributes' => array('class' => 'tagadelic level' . $weight, 'rel' => 'tag', 'title' => $row->{$title_field->field_alias}))) . " \n";
    $index++;
  }
  // Flash params
  $swf_options = array(
    'params' => array(
      'width' => $options['flash_width'],
      'height' => $options['flash_height'],
     ),
    'flashvars' => array(
      'background' => $options['flash_background'],
      'color' => '0x' . $options['flash_color'],
      'color2' => '0x' . $options['flash_color2'],
      'hicolor' => '0x' . $options['flash_hicolor'],
      'speed' => $options['flash_speed'],
      'distribute' => $options['flash_distribute'],
      'mode' => 'tags',
      'tagcloud' => '<tags>' . $tags_formatted_flash . '</tags>',
    ),
    'othervars' => array (
      'no_flash' => $tags_formatted_alt,
      'html_alt' => $tags_formatted_alt,
    ),
  );
  if ('true' == $options['flash_transparency']) {
    $params['wmode'] = 'transparent';
  }
  $swf_url = url(drupal_get_path('module', 'cumulus') . '/tagcloud.swf', array('absolute' => TRUE));

  $vars['cumulus'] = swf($swf_url, $swf_options);
}

/**
 * Implementation of hook_help().
 */
function cumulus_help($path, $arg) {
  switch ($path) {
    case 'admin/help#cumulus':
      $output = '<p>' . t('Cumulus allows you to display a taxonomy\'s terms using a Flash movie that rotates them in 3D. This way, you can set it up like a 3D tag cloud. It works just like a regular tag cloud, but is more visually exciting!') . '</p>';
      return $output;
  }
}